// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager;
using Azure.ResourceManager.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Resources
{
    /// <summary> A Class representing a Tenant along with the instance operations that can be performed on it. </summary>
    public partial class Tenant : ArmResource
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly TenantsRestOperations _tenantsRestClient;
        private readonly TenantData _data;

        /// <summary> Initializes a new instance of the <see cref="Tenant"/> class for mocking. </summary>
        protected Tenant()
        {
        }

        /// <summary> Initializes a new instance of the <see cref = "Tenant"/> class. </summary>
        /// <param name="options"> The client parameters to use in these operations. </param>
        /// <param name="resource"> The resource that is the target of operations. </param>
        internal Tenant(ArmResource options, TenantData resource) : base(options, new ResourceIdentifier(resource.Id))
        {
            HasData = true;
            _data = resource;
            _clientDiagnostics = new ClientDiagnostics(ClientOptions);
            _tenantsRestClient = new TenantsRestOperations(_clientDiagnostics, Pipeline, ClientOptions, BaseUri);
        }

        /// <summary> Gets the resource type for the operations. </summary>
        public static readonly ResourceType ResourceType = "Microsoft.Resources/tenants";

        /// <summary> Gets the valid resource type for the operations. </summary>
        protected override ResourceType ValidResourceType => ResourceType;

        /// <summary> Gets whether or not the current instance has data. </summary>
        public virtual bool HasData { get; }

        /// <summary> Gets the data representing this Feature. </summary>
        /// <exception cref="InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        public virtual TenantData Data
        {
            get
            {
                if (!HasData)
                    throw new InvalidOperationException("The current instance does not have data, you must call Get first.");
                return _data;
            }
        }

        #region TenantProvider

        /// <summary> Gets a collection of TenantProviders in the Tenant. </summary>
        /// <returns> An object representing collection of TenantProviders and their operations over a Tenant. </returns>
        public TenantProviderCollection GetTenantProviders()
        {
            return new TenantProviderCollection(this);
        }
        #endregion

        #region GenericResource

        /// <summary> Gets a collection of GenericResources in the Tenant. </summary>
        /// <returns> An object representing collection of GenericResources and their operations over a Tenant. </returns>
        public GenericResourceCollection GetGenericResources()
        {
            return new GenericResourceCollection(this);
        }
        #endregion

        #region TenantPolicyDefinition

        /// <summary> Gets a collection of TenantPolicyDefinitions in the Tenant. </summary>
        /// <returns> An object representing collection of TenantPolicyDefinitions and their operations over a Tenant. </returns>
        public TenantPolicyDefinitionCollection GetTenantPolicyDefinitions()
        {
            return new TenantPolicyDefinitionCollection(this);
        }
        #endregion

        #region TenantPolicySetDefinition

        /// <summary> Gets a collection of TenantPolicySetDefinitions in the Tenant. </summary>
        /// <returns> An object representing collection of TenantPolicySetDefinitions and their operations over a Tenant. </returns>
        public TenantPolicySetDefinitionCollection GetTenantPolicySetDefinitions()
        {
            return new TenantPolicySetDefinitionCollection(this);
        }
        #endregion

        #region DataPolicyManifest

        /// <summary> Gets a collection of DataPolicyManifests in the Tenant. </summary>
        /// <returns> An object representing collection of DataPolicyManifests and their operations over a Tenant. </returns>
        public DataPolicyManifestCollection GetDataPolicyManifests()
        {
            return new DataPolicyManifestCollection(this);
        }
        #endregion

        #region ResourceLink

        /// <summary> Gets a collection of ResourceLinks in the Tenant. </summary>
        /// <returns> An object representing collection of ResourceLinks and their operations over a Tenant. </returns>
        public ResourceLinkCollection GetResourceLinks()
        {
            return new ResourceLinkCollection(this);
        }
        #endregion

        #region Subscription

        /// <summary> Gets a collection of Subscriptions in the Tenant. </summary>
        /// <returns> An object representing collection of Subscriptions and their operations over a Tenant. </returns>
        public SubscriptionCollection GetSubscriptions()
        {
            return new SubscriptionCollection(this);
        }
        #endregion
    }
}
