// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Management.Models
{
    /// <summary> The entity. </summary>
    public partial class EntityInfo : Resource
    {
        /// <summary> Initializes a new instance of EntityInfo. </summary>
        internal EntityInfo()
        {
            ParentDisplayNameChain = new ChangeTrackingList<string>();
            ParentNameChain = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of EntityInfo. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="tenantId"> The AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000. </param>
        /// <param name="displayName"> The friendly name of the management group. </param>
        /// <param name="parent"> (Optional) The ID of the parent management group. </param>
        /// <param name="permissions"> The users specific permissions to this item. </param>
        /// <param name="inheritedPermissions"> The users specific permissions to this item. </param>
        /// <param name="numberOfDescendants"> Number of Descendants. </param>
        /// <param name="numberOfChildren"> Number of children is the number of Groups and Subscriptions that are exactly one level underneath the current Group. </param>
        /// <param name="numberOfChildGroups"> Number of children is the number of Groups that are exactly one level underneath the current Group. </param>
        /// <param name="parentDisplayNameChain"> The parent display name chain from the root group to the immediate parent. </param>
        /// <param name="parentNameChain"> The parent name chain from the root group to the immediate parent. </param>
        internal EntityInfo(ResourceIdentifier id, string name, ResourceType type, string tenantId, string displayName, SubResource parent, Permissions? permissions, Permissions? inheritedPermissions, int? numberOfDescendants, int? numberOfChildren, int? numberOfChildGroups, IReadOnlyList<string> parentDisplayNameChain, IReadOnlyList<string> parentNameChain) : base(id, name, type)
        {
            TenantId = tenantId;
            DisplayName = displayName;
            Parent = parent;
            Permissions = permissions;
            InheritedPermissions = inheritedPermissions;
            NumberOfDescendants = numberOfDescendants;
            NumberOfChildren = numberOfChildren;
            NumberOfChildGroups = numberOfChildGroups;
            ParentDisplayNameChain = parentDisplayNameChain;
            ParentNameChain = parentNameChain;
        }

        /// <summary> The AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000. </summary>
        public string TenantId { get; }
        /// <summary> The friendly name of the management group. </summary>
        public string DisplayName { get; }
        /// <summary> (Optional) The ID of the parent management group. </summary>
        public SubResource Parent { get; }
        /// <summary> The users specific permissions to this item. </summary>
        public Permissions? Permissions { get; }
        /// <summary> The users specific permissions to this item. </summary>
        public Permissions? InheritedPermissions { get; }
        /// <summary> Number of Descendants. </summary>
        public int? NumberOfDescendants { get; }
        /// <summary> Number of children is the number of Groups and Subscriptions that are exactly one level underneath the current Group. </summary>
        public int? NumberOfChildren { get; }
        /// <summary> Number of children is the number of Groups that are exactly one level underneath the current Group. </summary>
        public int? NumberOfChildGroups { get; }
        /// <summary> The parent display name chain from the root group to the immediate parent. </summary>
        public IReadOnlyList<string> ParentDisplayNameChain { get; }
        /// <summary> The parent name chain from the root group to the immediate parent. </summary>
        public IReadOnlyList<string> ParentNameChain { get; }
    }
}
